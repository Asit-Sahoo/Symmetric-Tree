/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void postorder(TreeNode*root,vector<int>&res){
        
        if(root==NULL){
            res.push_back(-1);
        }
        if(root!=NULL){

            postorder(root->left,res);
            postorder(root->right,res);
            res.push_back(root->val);

        }
        
    }
    void mirror(TreeNode**root){
        TreeNode*temp;
        if((*root)!=NULL){
            
        
        
            mirror(&(*root)->left);
            mirror(&(*root)->right);
            temp=(*root)->left;
            (*root)->left=(*root)->right;
            (*root)->right=temp;
                
        }
    }
          
    bool isSymmetric(TreeNode* root) {
       vector<int>post1;
        vector<int>post2;
        mirror(&(root->left));
        postorder(root->left,post1);
        postorder(root->right,post2);
        if(post1==post2){
            return true;
        }
        else{
            return false;
        }
    }
};